@page "/category/create"
@using BlazorAppSolution.UI.Model
@using BlazorAppSolution.UI.Services
@inject CategoryService CategoryService
@inject NavigationManager Navigation
@rendermode InteractiveServer
@inject IJSRuntime JS

<h3 class="text-center mt-4">Add Category</h3>

<div class="container mt-5">
    <div class="card shadow p-4">
        <div class="card-body">
            <form>
                <div class="form-group mb-3">
                    <label for="name" class="form-label fw-bold">Name:</label>
                    <input id="name" @bind="category.Name" class="form-control" placeholder="Enter category name" />
                </div>

                <div class="form-group mb-4">
                    <label for="description" class="form-label fw-bold">Description:</label>
                    <input id="description" @bind="category.Description" class="form-control" placeholder="Enter description" />
                </div>

                <div class="d-flex gap-2">
                    <button type="button" class="btn btn-primary w-100" @onclick="SaveCategory">Save</button>
                    <button type="button" class="btn btn-secondary w-100" @onclick="Cancel">Cancel</button>
                </div>
            </form>
        </div>
    </div>
</div>

@code {
    private Category category = new Category();

    private async Task SaveCategory()
    {
        try
        {
            await CategoryService.CreateCategoryAsync(category);
            await JS.InvokeVoidAsync("alert", "Category saved successfully!");
            Navigation.NavigateTo("/category"); // Redirects to the category list page
            category = new Category(); // Reset the form
        }
        catch (Exception ex)
        {
            await JS.InvokeVoidAsync("alert", "Category can't be created!");
            Console.WriteLine(ex.Message); // Log error for debugging
        }
    }

    private void Cancel()
    {
        Navigation.NavigateTo("/category"); // Redirects to the category list page
    }
}
